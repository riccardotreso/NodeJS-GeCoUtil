

var sql = require('mssql'); 
//http://pekim.github.io/tedious/api-connection.html
//https://npmjs.org/package/mssql

var config = {
    user: '...',
    password: '...',
    server: '...',
    database: '...',
	port: 1433
	
}

String.prototype.format = function() {
    var args = arguments;
    return this.replace(/{(\d+)}/g, function(match, number) { 
      return typeof args[number] != 'undefined'
        ? args[number]
        : match
      ;
    });
};


String.prototype.ToSQLDateTime = function() {
	var date = new Date(this);
	var dateSQL = date.getFullYear() + '-' + String(date.getMonth()+1).padLeft('0', 2) + '-' + date.getDate();
	return dateSQL;
};

String.prototype.padLeft = function (value, size) {
    var x = this;
    while (x.length < size) { x = value + x; }
    return x;
};



GeCoModel = function(server, instance, port, database, user, password ) {
	
	//inizialize variable
	config.server = server;
	config.database = database;
	config.user = user;
	config.password = password;
	if(instance)
		config.instance = instance;
	if(port)
		config.port = port;
	
};

GeCoModel.prototype.getConnection = function(callback, query) {
	var connection = new sql.Connection(config,function(err) {
		if(err) callback(err);
		else
		{
			var request = connection.request();
			
			request.query(query, function(err, recordset) {
				if(err) callback(err);
				else
				{
					callback(null,recordset);
				}
			});
		}
		
		
	
	});
};

GeCoModel.prototype.getUserById = function(callback, filter) {
	var query = "select * from ViewUtentiGruppiTestate where 1=1 and "; 
	if(isNaN(filter))
		query += "nomeutente like '%{0}%'".format(filter);
	else
		query += "idutente = {0}".format(filter);
		
	query += " AND 1=1 order by nomeutente,desgruppoutente,destestata "; //prevent sql injection
	
	console.log(query);
	
    this.getConnection(function(err, recordSet) {
      if( err ) callback(err)
      else {
		callback(null, recordSet);
      }
    }, query);
};


GeCoModel.prototype.getUserByTestata = function(callback, filter) {


	var query = "select * from ViewUtentiGruppiTestate where 1=1 and "; 
	if(isNaN(filter))
		query += "destestata like '%{0}%'".format(filter);
	else
		query += "idtestata = {0}".format(filter);
		
	query += " AND 1=1 order by nomeutente,desgruppoutente,destestata "; //prevent sql injection
	
	console.log(query);
	
    this.getConnection(function(err, recordSet) {
      if( err ) {
		console.log(err)
		callback(err)
		
	}
      else {
		callback(null, recordSet);
      }
    }, query);
};

GeCoModel.prototype.getUserByGruppo = function(callback, filter) {
	var query = "select * from ViewUtentiGruppiTestate where 1=1 and "; 
	if(isNaN(filter))
		query += "desgruppoutente like '%{0}%'".format(filter);
	else
		query += "idgruppoutente = {0}".format(filter);
		
	query += " AND 1=1 order by nomeutente,desgruppoutente,destestata "; //prevent sql injection
	
	console.log(query);
	
    this.getConnection(function(err, recordSet) {
      if( err ) callback(err)
      else {
		callback(null, recordSet);
      }
    }, query);
};



GeCoModel.prototype.getCollaborazioniMethode = function(callback, filter) {
	var query = "select top 1000 [IdCollaborazioneIF],[IdSistemaOrigine],[DataCollaborazioneIf],[DataCollaborazioneDa],[DataCollaborazioneAl],[IdTestata],[IdTestatina],[IdCollaborazione],[IdGruppoUtente],[Cognome],[Nome],[FlCollaboratoreDubbio] ,[FlContrattoDubbio]      ,[PaginaUscita]      ,[FlRighe]      ,[QtaRighe]      ,[QtaColonna]      ,[QtaFrazione]      ,[ImportoValorizzato]      ,[FlExtra]      ,[IdCollaboratore]      ,[QuantitaCollaborazione]     ,[IdUtente]      ,[IdCOntrattoPK]      ,[StatoClbz]      ,[Titolo]      ,[Note]      ,[IdPianoEditoriale]      ,[FlFirmato]      ,[IdRedattore]      ,[IdValuta]      ,[Product]      ,[Header]      ,[Section]      ,[DataInserimento]      ,[Inserto]      ,[UID] from CollaborazioneIFMethode where 1=1 and "; 
	
	var arrQuery = [];
	
	if(filter)
	{
		if(filter.Product !== "")
			arrQuery.push("product = '{0}'".format(filter.Product));
		if(filter.Header !== "")
			arrQuery.push("header = '{0}'".format(filter.Header));
		if(filter.Section !== "")
			arrQuery.push("section = '{0}'".format(filter.Section));
			
		if(filter.Data !== "" && filter.Data !== null)
			arrQuery.push("datacollaborazioneif = '{0}'".format(filter.Data.ToSQLDateTime()));
			
		if(filter.Titolo !== "")
			arrQuery.push("titolo like '%{0}%'".format(filter.Titolo));
			
		if(filter.Pagina !== "")
			arrQuery.push("paginauscita = '{0}'".format(filter.Pagina));
				
		if(filter.IsBidone == true)
			arrQuery.push("idsistemaorigine = 0");
		else
			arrQuery.push("idsistemaorigine <> 0");
			
			
		query += arrQuery.join(" and ");
	}
		
	query += " AND 1=1 order by datacollaborazioneif, paginauscita "; //prevent sql injection
	
	//console.log(query);
	
    this.getConnection(function(err, recordSet) {
      if( err ) callback(err)
      else {
		//console.log(recordSet[0]);
		callback(null, recordSet);
      }
    }, query);
};







exports.GeCoModel = GeCoModel;